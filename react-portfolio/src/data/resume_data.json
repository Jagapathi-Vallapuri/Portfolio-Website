{
    "contact_information": {
        "name": "Vallapuri Jagapathi",
        "address": "Bengaluru, Karnataka 560085",
        "phone": "+91 798 909 2641",
        "email": "jagapathivallapuri444@gmail.com",
        "linkedin": "linkedin.com/in/jagapathi-vallapuri",
        "github": "github.com/Jagapathi-Vallapuri"
    },
    "education": {
        "university": "PES University",
        "degree": "Bachelor of Technology in Computer Science and Engineering (AI/ML)",
        "cgpa": "8.66",
        "coursework": [
            "Data Structures and Algorithms",
            "Advanced Data Analytics",
            "Database Management System",
            "Algorithms and Optimizations in",
            "Cloud Computing",
            "Deep Learning",
            "Large Language Models and Their Applications"
        ]
    },
    "projects": [
        {
            "title": "Face Inpainting using VAE-GAN",
            "technologies": "Python, PyTorch, Deep Learning",
            "duration": "Oct 2024 – Nov 2024 (Team of 4)",
            "description": "– Designed and implemented a VAE-GAN hybrid to restore occluded facial regions using the Labeled Faces in the Wild – Built an encoder-decoder generator for latent representations and a convolutional discriminator for adversarial training. – Applied random occlusion masks to simulate real-world obstructions (e.g., sunglasses, masks, damage). – Engineered a composite loss function using adversarial loss, KL-divergence, and reconstruction loss for improved realism. – Led model architecture design and optimization; collaborated on data preprocessing and output evaluation.",
            "github": "VAE-GAN Face Inpainting"
        },
        {
            "title": "Recommender System – Microservices",
            "technologies": "FastAPI, Docker, MongoDB, Nginx",
            "duration": "Mar 2025 – Apr 2025 (Team of 4)",
            "description": "– Redesigned a monolithic recommendation engine into a modular microservices architecture to enhance scalability and – Containerized core services—data, recommender, gateway—using Docker with isolated build environments. – Implemented Docker Compose for orchestration, handling service discovery, volumes, and environment configs. – Built a FastAPI gateway to unify endpoints and abstract internal service logic. – Developed a React/Nginx-based dashboard to monitor microservice health via dynamic polling of /health endpoints. – Spearheaded system decomposition, gateway routing, and health monitoring UI; supported backend logic integration.",
            "github": "Recommender Microservices"
        },
        {
            "title": "Capstone Project Manager",
            "technologies": "Python, SQL, Streamlit",
            "duration": "Oct 2024 – Nov 2024 (Team of 2)",
            "description": "– Developed a full-stack system to manage capstone project assignments, submissions, and evaluations. – Designed a normalized MySQL schema with constraints for student-faculty-project mappings. – Implemented user authentication and secure password hashing in the backend. – Created a role-based Streamlit interface for faculty and students to access project data and evaluation records. – Led schema design, backend logic, and SQL optimization; integrated frontend with team support.",
            "github": "Capstone Project Manager"
        }
    ],
    "technical_skills": {
        "languages": "Python, C, C++, Java, HTML/CSS, JavaScript, SQL, Bash",
        "technologies_frameworks": "Linux, Git, React, Node.js, Express.js, MongoDB, MySQL, FastAPI, Apache Kafka, Apache",
        "tools": "VS Code, Google Colab, Jupyter Notebook, GitHub, Postman, Docker Compose"
    },
    "extracurricular": [
        {
            "organization": "Technical Member",
            "role": "",
            "duration": "October 2022 – September 2024",
            "description": "– Design and review problem statements and test cases for weekly competitive programming contests. – Volunteered as a non-technical member for Terrathon 3.0"
        }
    ]
}
